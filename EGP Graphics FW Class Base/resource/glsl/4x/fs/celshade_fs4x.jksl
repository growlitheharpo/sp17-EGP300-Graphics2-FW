/*
	Cel Lighting (FS) implemented in JLSL (James Keats Shader Language)
*/

// ****
// type
shadertype fragment

// ****
// varyings
in varying
{
	vec4 normal;
	vec4 lightVec;
	vec4 eyeVec;
	vec4 texcoord;
} pass;

// ****
// uniforms
uniform
{
	sampler2D tex_dm;
	sampler2D tex_sm;
}

// ****
// target
out target
{
	vec4 @lane(default) fragColor;
}

const vec4 SAMPLE_BASE = vec4(0.0, 0.2, 1.0, 1.0);
const vec4 AMBIENT = vec4(0.08, 0.04, 0.02, 1.0);
const float INTENSITY = 0.6;

// shader function
void main()
{
	
	// 1. diffuse
	vec4 N = normalize(pass.normal);
	vec4 L = normalize(pass.lightVec);
	
	//Lighting coord
	float kd = max(0.0, dot(N, L));

	vec4 texColor = texture(tex_sm, vec2(kd, 0.5));

	texColor = texColor * (kd * INTENSITY + (1.0 - INTENSITY));
	
	fragColor = texColor * texture(tex_dm, pass.texcoord.xy);
	fragColor = texColor * SAMPLE_BASE;
}
